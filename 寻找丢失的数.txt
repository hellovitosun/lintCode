给出一个包含 0 .. N 中 N 个数的序列，找出0 .. N 中没有出现在序列中的那个数。
样例
N = 4 且序列为 [0, 1, 3] 时，缺失的数为2。
注意
可以改变序列中数的位置。
挑战
在数组上原地完成，使用O(1)的额外空间和O(N)的时间。
public class Solution {

    /**
    
     * @param nums: an array of integers

     * @return: an integer

     */

    public int findMissing(int[] nums) {

        // write your code here

        int max=999999;

        int missing=-1;

        int[] count=new int[max];

        int len=nums.length;

        for(int i=0;i<len;i++){

            count[nums[i]]++;

        }

        for(int i=0;i<len+1;i++){

            if (count[i]==0){

                missing=i;

                break;

            }

        }

        return missing;

    }

}
心得：借鉴了计数排序的方法可以在O(N)时间实现，虽然辅助空间大小是确定的，但是不是在数组上原地完成
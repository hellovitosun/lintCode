将两个排序链表合并为一个新的排序链表

您在真实的面试中是否遇到过这个题？ Yes
样例
给出 1->3->8->11->15->null，2->null， 返回 1->2->3->8->11->15->null。

思路：新建一个头节点，对两个链表各设置两个指针，选择两者较小的链接到头节点，然后将其向后移动，直到一个链表扫描完，然后将另一条链剩下的元素链接到新链表
后面。



/**
 * Definition for ListNode.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int val) {
 *         this.val = val;
 *         this.next = null;
 *     }
 * }
 */ 
public class Solution {
    /**
     * @param ListNode l1 is the head of the linked list
     * @param ListNode l2 is the head of the linked list
     * @return: ListNode head of linked list
     */
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        // write your code here
        ListNode head = null;
        if(l1 == null){
            return l2;
        }
        if(l2 == null){
            return l1;
        }
        if(l1.val < l2.val){
            head = l1;
            l1 = l1.next;
        }else{
            head = l2;
            l2 = l2.next;
        }
        ListNode p = head;
        while(l1!=null && l2!=null){
            if(l1.val < l2.val){
                p.next = l1;
                l1 = l1.next;
            }else{
                p.next = l2;
                l2 = l2.next;
            }
            p = p.next;
        }
        if(l1 != null){
            p.next = l1;
           
        }
        if(l2 != null){
            p.next = l2;
            
        }
        return head;
        
    }
}

正如标题所述，你需要使用两个栈来实现队列的一些操作。

队列应支持push(element)，pop() 和 top()，其中pop是弹出队列中的第一个(最前面的)元素。

pop和top方法都应该返回第一个元素的值。

您在真实的面试中是否遇到过这个题？ Yes
样例
比如push(1), pop(), push(2), push(3), top(), pop()，你应该返回1，2和2

挑战
仅使用两个栈来实现它，不使用任何其他数据结构，push，pop 和 top的复杂度都应该是均摊O(1)的

思路：入队时压入第一个栈，出队时将第一个栈里的内容压入第二个栈，此时元素的顺序刚好反过来，从第二个栈弹出的顺序即队列出队的顺序

public class Solution {
    private Stack<Integer> stack1;
    private Stack<Integer> stack2;

    public Solution() {
       // do initialization if necessary
       stack1 = new Stack<Integer>();
       stack2 = new Stack<Integer>();
    }
    
    public void push(int element) {
        // write your code here
        stack1.push(element);
    }

    public int pop() {
        // write your code here
        int element;
        
        if(stack2.isEmpty()){
        
            while(!stack1.isEmpty()){
                stack2.push(stack1.pop());
            }
        }
        element = stack2.pop();
        return element;
    }

    public int top() {
        // write your code here
        int element;
        
        if(stack2.isEmpty()){
        
            while(!stack1.isEmpty()){
                stack2.push(stack1.pop());
            }
        }
        element = stack2.peek();
        return element;
    }
}

